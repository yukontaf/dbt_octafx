{#
Copyright (c) 2021-present Snowplow Analytics Ltd. All rights reserved.
This program is licensed to you under the Snowplow Personal and Academic License Version 1.0,
and you may not use this file except in compliance with the Snowplow Personal and Academic License Version 1.0.
You may obtain a copy of the Snowplow Personal and Academic License Version 1.0 at https://docs.snowplow.io/personal-and-academic-license-1.0/
#}
{% macro test_get_sde_or_context() %}

    {{
        return(
            adapter.dispatch(
                "test_get_sde_or_context", "snowplow_utils_integration_tests"
            )()
        )
    }}

{% endmacro %}

{% macro default__test_get_sde_or_context() %}
{# No test on other warehouses #}
{% endmacro %}

{% macro postgres__test_get_sde_or_context() %}

    {% set expected_dict = {
        "default": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by root_id order by root_tstamp) as dedupe_index -- keep the first event for that root_id from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" ), data_get_sde_or_context as ( select "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", root_tstamp as "yauaa_context__tstamp", root_id as "yauaa_context__id" from dd_data_get_sde_or_context where dedupe_index = 1 )',
        "both_dates": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by root_id order by root_tstamp) as dedupe_index -- keep the first event for that root_id from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" where root_tstamp >= \'2023-01-01\' and root_tstamp <= \'2023-02-01\' ), data_get_sde_or_context as ( select "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", root_tstamp as "yauaa_context__tstamp", root_id as "yauaa_context__id" from dd_data_get_sde_or_context where dedupe_index = 1 )',
        "lower_only": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by root_id order by root_tstamp) as dedupe_index -- keep the first event for that root_id from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" ), data_get_sde_or_context as ( select "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", root_tstamp as "yauaa_context__tstamp", root_id as "yauaa_context__id" from dd_data_get_sde_or_context where dedupe_index = 1 )',
        "upper_only": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by root_id order by root_tstamp) as dedupe_index -- keep the first event for that root_id from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" ), data_get_sde_or_context as ( select "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", root_tstamp as "yauaa_context__tstamp", root_id as "yauaa_context__id" from dd_data_get_sde_or_context where dedupe_index = 1 )',
        "prefix_no_dates": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by root_id order by root_tstamp) as dedupe_index -- keep the first event for that root_id from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" ), data_get_sde_or_context as ( select "device_class" as "abc_device_class", "agent_build" as "abc_agent_build", "agent_class" as "abc_agent_class", "agent_information_email" as "abc_agent_information_email", "agent_information_url" as "abc_agent_information_url", "agent_language" as "abc_agent_language", "agent_language_code" as "abc_agent_language_code", "agent_name" as "abc_agent_name", "agent_name_version" as "abc_agent_name_version", "agent_name_version_major" as "abc_agent_name_version_major", "agent_security" as "abc_agent_security", "agent_uuid" as "abc_agent_uuid", "agent_version" as "abc_agent_version", "agent_version_major" as "abc_agent_version_major", "anonymized" as "abc_anonymized", "carrier" as "abc_carrier", "device_brand" as "abc_device_brand", "device_cpu" as "abc_device_cpu", "device_cpu_bits" as "abc_device_cpu_bits", "device_firmware_version" as "abc_device_firmware_version", "device_name" as "abc_device_name", "device_version" as "abc_device_version", "facebook_carrier" as "abc_facebook_carrier", "facebook_device_class" as "abc_facebook_device_class", "facebook_device_name" as "abc_facebook_device_name", "facebook_device_version" as "abc_facebook_device_version", "facebook_fbop" as "abc_facebook_fbop", "facebook_fbss" as "abc_facebook_fbss", "facebook_operating_system_name" as "abc_facebook_operating_system_name", "facebook_operating_system_version" as "abc_facebook_operating_system_version", "g_sa_installation_id" as "abc_g_sa_installation_id", "hacker_attack_vector" as "abc_hacker_attack_vector", "hacker_toolkit" as "abc_hacker_toolkit", "i_e_compatibility_name_version" as "abc_i_e_compatibility_name_version", "i_e_compatibility_name_version_major" as "abc_i_e_compatibility_name_version_major", "i_e_compatibility_version" as "abc_i_e_compatibility_version", "i_e_compatibility_version_major" as "abc_i_e_compatibility_version_major", "kobo_affiliate" as "abc_kobo_affiliate", "kobo_platform_id" as "abc_kobo_platform_id", "layout_engine_build" as "abc_layout_engine_build", "layout_engine_class" as "abc_layout_engine_class", "layout_engine_name" as "abc_layout_engine_name", "layout_engine_name_version" as "abc_layout_engine_name_version", "layout_engine_name_version_major" as "abc_layout_engine_name_version_major", "layout_engine_version" as "abc_layout_engine_version", "layout_engine_version_major" as "abc_layout_engine_version_major", "network_type" as "abc_network_type", "operating_system_class" as "abc_operating_system_class", "operating_system_name" as "abc_operating_system_name", "operating_system_name_version" as "abc_operating_system_name_version", "operating_system_version" as "abc_operating_system_version", "operating_system_version_build" as "abc_operating_system_version_build", "webview_app_name" as "abc_webview_app_name", "webview_app_name_version_major" as "abc_webview_app_name_version_major", "webview_app_version" as "abc_webview_app_version", "webview_app_version_major" as "abc_webview_app_version_major", "operating_system_name_version_major" as "abc_operating_system_name_version_major", "operating_system_version_major" as "abc_operating_system_version_major", root_tstamp as "abc__tstamp", root_id as "abc__id" from dd_data_get_sde_or_context where dedupe_index = 1 )',
        "prefix_with_dates": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by root_id order by root_tstamp) as dedupe_index -- keep the first event for that root_id from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" where root_tstamp >= \'2023-01-01\' and root_tstamp <= \'2023-02-01\' ), data_get_sde_or_context as ( select "device_class" as "abc_device_class", "agent_build" as "abc_agent_build", "agent_class" as "abc_agent_class", "agent_information_email" as "abc_agent_information_email", "agent_information_url" as "abc_agent_information_url", "agent_language" as "abc_agent_language", "agent_language_code" as "abc_agent_language_code", "agent_name" as "abc_agent_name", "agent_name_version" as "abc_agent_name_version", "agent_name_version_major" as "abc_agent_name_version_major", "agent_security" as "abc_agent_security", "agent_uuid" as "abc_agent_uuid", "agent_version" as "abc_agent_version", "agent_version_major" as "abc_agent_version_major", "anonymized" as "abc_anonymized", "carrier" as "abc_carrier", "device_brand" as "abc_device_brand", "device_cpu" as "abc_device_cpu", "device_cpu_bits" as "abc_device_cpu_bits", "device_firmware_version" as "abc_device_firmware_version", "device_name" as "abc_device_name", "device_version" as "abc_device_version", "facebook_carrier" as "abc_facebook_carrier", "facebook_device_class" as "abc_facebook_device_class", "facebook_device_name" as "abc_facebook_device_name", "facebook_device_version" as "abc_facebook_device_version", "facebook_fbop" as "abc_facebook_fbop", "facebook_fbss" as "abc_facebook_fbss", "facebook_operating_system_name" as "abc_facebook_operating_system_name", "facebook_operating_system_version" as "abc_facebook_operating_system_version", "g_sa_installation_id" as "abc_g_sa_installation_id", "hacker_attack_vector" as "abc_hacker_attack_vector", "hacker_toolkit" as "abc_hacker_toolkit", "i_e_compatibility_name_version" as "abc_i_e_compatibility_name_version", "i_e_compatibility_name_version_major" as "abc_i_e_compatibility_name_version_major", "i_e_compatibility_version" as "abc_i_e_compatibility_version", "i_e_compatibility_version_major" as "abc_i_e_compatibility_version_major", "kobo_affiliate" as "abc_kobo_affiliate", "kobo_platform_id" as "abc_kobo_platform_id", "layout_engine_build" as "abc_layout_engine_build", "layout_engine_class" as "abc_layout_engine_class", "layout_engine_name" as "abc_layout_engine_name", "layout_engine_name_version" as "abc_layout_engine_name_version", "layout_engine_name_version_major" as "abc_layout_engine_name_version_major", "layout_engine_version" as "abc_layout_engine_version", "layout_engine_version_major" as "abc_layout_engine_version_major", "network_type" as "abc_network_type", "operating_system_class" as "abc_operating_system_class", "operating_system_name" as "abc_operating_system_name", "operating_system_name_version" as "abc_operating_system_name_version", "operating_system_version" as "abc_operating_system_version", "operating_system_version_build" as "abc_operating_system_version_build", "webview_app_name" as "abc_webview_app_name", "webview_app_name_version_major" as "abc_webview_app_name_version_major", "webview_app_version" as "abc_webview_app_version", "webview_app_version_major" as "abc_webview_app_version_major", "operating_system_name_version_major" as "abc_operating_system_name_version_major", "operating_system_version_major" as "abc_operating_system_version_major", root_tstamp as "abc__tstamp", root_id as "abc__id" from dd_data_get_sde_or_context where dedupe_index = 1 )',
        "prefix_with_dates_not_single": 'dd_data_get_sde_or_context as ( select "root_id", "root_tstamp", "device_class", "agent_build", "agent_class", "agent_information_email", "agent_information_url", "agent_language", "agent_language_code", "agent_name", "agent_name_version", "agent_name_version_major", "agent_security", "agent_uuid", "agent_version", "agent_version_major", "anonymized", "carrier", "device_brand", "device_cpu", "device_cpu_bits", "device_firmware_version", "device_name", "device_version", "facebook_carrier", "facebook_device_class", "facebook_device_name", "facebook_device_version", "facebook_fbop", "facebook_fbss", "facebook_operating_system_name", "facebook_operating_system_version", "g_sa_installation_id", "hacker_attack_vector", "hacker_toolkit", "i_e_compatibility_name_version", "i_e_compatibility_name_version_major", "i_e_compatibility_version", "i_e_compatibility_version_major", "kobo_affiliate", "kobo_platform_id", "layout_engine_build", "layout_engine_class", "layout_engine_name", "layout_engine_name_version", "layout_engine_name_version_major", "layout_engine_version", "layout_engine_version_major", "network_type", "operating_system_class", "operating_system_name", "operating_system_name_version", "operating_system_version", "operating_system_version_build", "webview_app_name", "webview_app_name_version_major", "webview_app_version", "webview_app_version_major", "operating_system_name_version_major", "operating_system_version_major", row_number() over (partition by "schema_vendor","schema_name","schema_format","schema_version","root_id","root_tstamp","ref_root","ref_tree","ref_parent","device_class","agent_build","agent_class","agent_information_email","agent_information_url","agent_language","agent_language_code","agent_name","agent_name_version","agent_name_version_major","agent_security","agent_uuid","agent_version","agent_version_major","anonymized","carrier","device_brand","device_cpu","device_cpu_bits","device_firmware_version","device_name","device_version","facebook_carrier","facebook_device_class","facebook_device_name","facebook_device_version","facebook_fbop","facebook_fbss","facebook_operating_system_name","facebook_operating_system_version","g_sa_installation_id","hacker_attack_vector","hacker_toolkit","i_e_compatibility_name_version","i_e_compatibility_name_version_major","i_e_compatibility_version","i_e_compatibility_version_major","kobo_affiliate","kobo_platform_id","layout_engine_build","layout_engine_class","layout_engine_name","layout_engine_name_version","layout_engine_name_version_major","layout_engine_version","layout_engine_version_major","network_type","operating_system_class","operating_system_name","operating_system_name_version","operating_system_version","operating_system_version_build","webview_app_name","webview_app_name_version_major","webview_app_version","webview_app_version_major","operating_system_name_version_major","operating_system_version_major") as dedupe_index -- get the index across all columns for the entity from "'
        ~ target.database
        ~ '"."'
        ~ target.schema
        ~ '_snplw_utils_int_tests"."data_get_sde_or_context" where root_tstamp >= \'2023-01-01\' and root_tstamp <= \'2023-02-01\' ), data_get_sde_or_context as ( select "device_class" as "abc_device_class", "agent_build" as "abc_agent_build", "agent_class" as "abc_agent_class", "agent_information_email" as "abc_agent_information_email", "agent_information_url" as "abc_agent_information_url", "agent_language" as "abc_agent_language", "agent_language_code" as "abc_agent_language_code", "agent_name" as "abc_agent_name", "agent_name_version" as "abc_agent_name_version", "agent_name_version_major" as "abc_agent_name_version_major", "agent_security" as "abc_agent_security", "agent_uuid" as "abc_agent_uuid", "agent_version" as "abc_agent_version", "agent_version_major" as "abc_agent_version_major", "anonymized" as "abc_anonymized", "carrier" as "abc_carrier", "device_brand" as "abc_device_brand", "device_cpu" as "abc_device_cpu", "device_cpu_bits" as "abc_device_cpu_bits", "device_firmware_version" as "abc_device_firmware_version", "device_name" as "abc_device_name", "device_version" as "abc_device_version", "facebook_carrier" as "abc_facebook_carrier", "facebook_device_class" as "abc_facebook_device_class", "facebook_device_name" as "abc_facebook_device_name", "facebook_device_version" as "abc_facebook_device_version", "facebook_fbop" as "abc_facebook_fbop", "facebook_fbss" as "abc_facebook_fbss", "facebook_operating_system_name" as "abc_facebook_operating_system_name", "facebook_operating_system_version" as "abc_facebook_operating_system_version", "g_sa_installation_id" as "abc_g_sa_installation_id", "hacker_attack_vector" as "abc_hacker_attack_vector", "hacker_toolkit" as "abc_hacker_toolkit", "i_e_compatibility_name_version" as "abc_i_e_compatibility_name_version", "i_e_compatibility_name_version_major" as "abc_i_e_compatibility_name_version_major", "i_e_compatibility_version" as "abc_i_e_compatibility_version", "i_e_compatibility_version_major" as "abc_i_e_compatibility_version_major", "kobo_affiliate" as "abc_kobo_affiliate", "kobo_platform_id" as "abc_kobo_platform_id", "layout_engine_build" as "abc_layout_engine_build", "layout_engine_class" as "abc_layout_engine_class", "layout_engine_name" as "abc_layout_engine_name", "layout_engine_name_version" as "abc_layout_engine_name_version", "layout_engine_name_version_major" as "abc_layout_engine_name_version_major", "layout_engine_version" as "abc_layout_engine_version", "layout_engine_version_major" as "abc_layout_engine_version_major", "network_type" as "abc_network_type", "operating_system_class" as "abc_operating_system_class", "operating_system_name" as "abc_operating_system_name", "operating_system_name_version" as "abc_operating_system_name_version", "operating_system_version" as "abc_operating_system_version", "operating_system_version_build" as "abc_operating_system_version_build", "webview_app_name" as "abc_webview_app_name", "webview_app_name_version_major" as "abc_webview_app_name_version_major", "webview_app_version" as "abc_webview_app_version", "webview_app_version_major" as "abc_webview_app_version_major", "operating_system_name_version_major" as "abc_operating_system_name_version_major", "operating_system_version_major" as "abc_operating_system_version_major", dedupe_index as "abc__index", -- keep track of this for the join root_tstamp as "abc__tstamp", root_id as "abc__id" from dd_data_get_sde_or_context )',
    } %}

    {% set results_dict = {
        "default": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
        ).split()
        | join(" "),
        "both_dates": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
            "'2023-01-01'",
            "'2023-02-01'",
        ).split()
        | join(" "),
        "lower_only": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
            lower_limit="'2023-01-01'",
        ).split()
        | join(" "),
        "upper_only": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
            upper_limit="'2023-02-01'",
        ).split()
        | join(" "),
        "prefix_no_dates": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
            prefix="abc",
        ).split()
        | join(" "),
        "prefix_with_dates": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
            "'2023-01-01'",
            "'2023-02-01'",
            prefix="abc",
        ).split()
        | join(" "),
        "prefix_with_dates_not_single": snowplow_utils.get_sde_or_context(
            target.schema ~ "_snplw_utils_int_tests",
            "data_get_sde_or_context",
            "'2023-01-01'",
            "'2023-02-01'",
            prefix="abc",
            single_entity=false,
        ).split()
        | join(" "),
    } %}

    {# {{ print(results_dict['default'])}} #}
    {# {{ print(results_dict['both_dates'])}} #}
    {# {{ print(results_dict['lower_only'])}} #}
    {# {{ print(results_dict['upper_only'])}} #}
    {# {{ print(results_dict['prefix_no_dates'])}} #}
    {# {{ print(results_dict['prefix_with_dates'])}} #}
    {# {{ print(results_dict['prefix_with_dates_not_single'])}} #}
    {{ dbt_unittest.assert_dict_equals(expected_dict, results_dict) }}

{% endmacro %}
